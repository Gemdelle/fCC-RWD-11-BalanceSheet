html {
    box-sizing: border-box;
    
}

body {
    margin-top: 30px;
    font-family: 'Old Standard TT', serif;
    color: #230a0a;
    background-color: #634346;
    height: 650px;
    max-height: 2000px;
}

/* The sr-only class. You can use CSS to make elements with this class completely hidden from the visual page, but still be announced by screen readers. */

/* The CSS clip property is used to define the visible portions of an element.  */

main {
    padding: 60px;
}

#divider {
    width: 15vw;
}

#introduction {
    display: flex;
    flex-direction: column;
}

#balance {
    font-weight: normal;
}

.arrow {
    height: 18px;
    cursor: pointer;
    transition: all 300ms ease-in-out;
}

.hidden {
    display: none;
    height: 0;
    overflow: hidden;
    transition: all 300ms ease-in-out;
}

.rotation {
    transform: rotate(90deg);
}

#data01,
#data02,
#data03 {
    transition: all 300ms ease-in-out;
}

span[class~="sr-only"] {
    border: 0 !important;
    clip: rect(1px, 1px, 1px, 1px) !important;
    clip-path: inset(50%) !important;
    -webkit-clip-path: inset(50%) !important;
    height: 1px !important;
    width: 1px !important;
    /* This will ensure that not only are they no longer visible, but they are not even within the page view: */
    position: absolute !important;
    overflow: hidden !important;
    white-space: nowrap !important;
    padding: 0 !important;
    margin: -1px !important;
}

h1 {
    max-width: 37.25rem;
    margin: 0 auto;
    padding: 1.5rem 1.25rem;
}

h1 .flex {
    display: flex;
    flex-direction: column-reverse;
    gap: 1rem;
}

h1 .flex span:first-of-type {
    font-size: 0.7em;
}

section {
    max-width: 40rem;
    margin: 0 auto;
    border: 5px ridge #d0d0d5;
    background-color: white;
}

#years {
    display: flex;
    justify-content: flex-end;
    position: sticky;
    top: 0;
    background-color: #330d11;
    color: #fff;
    z-index: 999;
    margin: 0 -2px;
    padding: 0.5rem calc(1.25rem + 2px) 0.5rem 0;
}

#years span[class] {
    font-weight: bold;
    width: 4.5rem;
    text-align: right;
}

.table-wrap {
    padding: 0 0.75rem 1.5rem 0.75rem;
}

table {
    border-collapse: collapse;
    border: 0;
    width: 100%;
    position: relative;
    margin-top: 3rem;
}

table caption {
    color: #642e2e;
    font-size: 1.3em;
    font-weight: bold;
    position: absolute;
    top: -2.25rem;
    left: 0.5rem;
}

tbody td {
    width: 100vw;
    min-width: 4rem;
    max-width: 4rem;
}

tbody th {
    width: calc(100% - 12rem);
}

/* The key difference between tr[class="total"] and tr.total is that the first will select tr elements where the only class is total. The second will select tr elements where the class includes total. */

tr[class="total"] {
    border-bottom: 4px double #230a0a;
    font-weight: bold;
    transition: all 300ms ease-in-out;
}

tr[class="total"] th {
    text-align: left;
    padding: 0.5rem 0 0.25rem 0.5rem;
}

tr.total td {
    text-align: right;
    padding: 0 0.25rem;
}

tr.total td:nth-of-type(3) {
    padding-right: 0.5rem;
}

tr.total:hover {
    background-color: #c8a5a5;
}

td[class="current"] {
    font-style: italic;
}

tr[class="data"] {
    background-image: linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem);
}

tr.data th {
    text-align: left;
    padding-top: 0.3rem;
    padding-left: 0.5rem;
}

tr.data th .description {
    display: block;
    font-style: italic;
    font-weight: normal;
    padding: 1rem 0 0.75rem;
    margin-right: -13.5rem;
}

tr.data td {
    vertical-align: top;
    text-align: right;
    padding: 0.3rem 0.25rem 0;
}

tr.data td:last-of-type {
    padding-right: 0.5rem;
}